{"/home/travis/build/npmtest/node-npmtest-express-restify-mongoose/test.js":"/* istanbul instrument in package npmtest_express_restify_mongoose */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-express-restify-mongoose/lib.npmtest_express_restify_mongoose.js":"/* istanbul instrument in package npmtest_express_restify_mongoose */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_express_restify_mongoose = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_express_restify_mongoose = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-express-restify-mongoose/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-express-restify-mongoose && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_express_restify_mongoose */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_express_restify_mongoose\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught.stack);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_express_restify_mongoose.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_express_restify_mongoose.rollup.js'] =\n            local.assetsDict['/assets.npmtest_express_restify_mongoose.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_express_restify_mongoose.__dirname +\n                    '/lib.npmtest_express_restify_mongoose.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-express-restify-mongoose/express-restify-mongoose/lib/express-restify-mongoose.js":"'use strict';\n\nvar util = require('util');\nvar _ = require('lodash');\nvar Filter = require('./resource_filter');\nvar customDefaults = null;\nvar excludedMap = {};\n\nfunction getDefaults() {\n  return _.defaults(_.clone(customDefaults) || {}, {\n    prefix: '/api',\n    version: '/v1',\n    idProperty: '_id',\n    findOneAndUpdate: true,\n    findOneAndRemove: true,\n    lean: true,\n    restify: false,\n    runValidators: false,\n    allowRegex: true,\n    private: [],\n    protected: []\n  });\n}\n\nvar restify = function restify(app, model) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var options = {};\n  _.assign(options, getDefaults(), opts);\n\n  var access = require('./middleware/access');\n  var ensureContentType = require('./middleware/ensureContentType')(options);\n  var filterAndFindById = require('./middleware/filterAndFindById')(model, options);\n  var onError = require('./middleware/onError');\n  var outputFn = require('./middleware/outputFn');\n  var prepareQuery = require('./middleware/prepareQuery')(options);\n  var prepareOutput = require('./middleware/prepareOutput')(options, excludedMap);\n\n  if (!_.isArray(options.private)) {\n    throw new Error('\"options.private\" must be an array of fields');\n  }\n\n  if (!_.isArray(options.protected)) {\n    throw new Error('\"options.protected\" must be an array of fields');\n  }\n\n  model.schema.eachPath(function (name, path) {\n    if (path.options.access) {\n      switch (path.options.access.toLowerCase()) {\n        case 'private':\n          options.private.push(name);\n          break;\n        case 'protected':\n          options.protected.push(name);\n          break;\n      }\n    }\n  });\n\n  options.filter = new Filter({\n    model: model,\n    excludedMap: excludedMap,\n    filteredKeys: {\n      private: options.private,\n      protected: options.protected\n    }\n  });\n\n  excludedMap[model.modelName] = options.filter.filteredKeys;\n\n  if (!_.isArray(options.preMiddleware)) {\n    options.preMiddleware = options.preMiddleware ? [options.preMiddleware] : [];\n  }\n\n  if (!_.isArray(options.preCreate)) {\n    options.preCreate = options.preCreate ? [options.preCreate] : [];\n  }\n\n  if (!_.isArray(options.preRead)) {\n    options.preRead = options.preRead ? [options.preRead] : [];\n  }\n\n  if (!_.isArray(options.preUpdate)) {\n    options.preUpdate = options.preUpdate ? [options.preUpdate] : [];\n  }\n\n  if (!_.isArray(options.preDelete)) {\n    options.preDelete = options.preDelete ? [options.preDelete] : [];\n  }\n\n  if (!options.contextFilter) {\n    options.contextFilter = function (model, req, done) {\n      return done(model);\n    };\n  }\n\n  if (!_.isArray(options.postCreate)) {\n    options.postCreate = options.postCreate ? [options.postCreate] : [];\n  }\n\n  if (!_.isArray(options.postRead)) {\n    options.postRead = options.postRead ? [options.postRead] : [];\n  }\n\n  if (!_.isArray(options.postUpdate)) {\n    options.postUpdate = options.postUpdate ? [options.postUpdate] : [];\n  }\n\n  if (!_.isArray(options.postDelete)) {\n    options.postDelete = options.postDelete ? [options.postDelete] : [];\n  }\n\n  if (!options.onError) {\n    options.onError = onError(!options.restify);\n  }\n\n  if (!options.outputFn) {\n    options.outputFn = outputFn(!options.restify);\n  }\n\n  options.name = options.name || model.modelName;\n\n  var ops = require('./operations')(model, options, excludedMap);\n\n  var uriItem = '' + options.prefix + options.version + '/' + options.name;\n  if (uriItem.indexOf('/:id') === -1) {\n    uriItem += '/:id';\n  }\n\n  var uriItems = uriItem.replace('/:id', '');\n  var uriCount = uriItems + '/count';\n  var uriShallow = uriItem + '/shallow';\n\n  if (_.isUndefined(app.delete)) {\n    app.delete = app.del;\n  }\n\n  app.use(function (req, res, next) {\n    req.erm = { model: model };\n    next();\n  });\n\n  var accessMiddleware = options.access ? access(options) : [];\n\n  app.get(uriItems, prepareQuery, options.preMiddleware, options.preRead, accessMiddleware, ops.getItems, prepareOutput);\n  app.get(uriCount, prepareQuery, options.preMiddleware, options.preRead, accessMiddleware, ops.getCount, prepareOutput);\n  app.get(uriItem, prepareQuery, options.preMiddleware, options.preRead, accessMiddleware, ops.getItem, prepareOutput);\n  app.get(uriShallow, prepareQuery, options.preMiddleware, options.preRead, accessMiddleware, ops.getShallow, prepareOutput);\n\n  app.post(uriItems, prepareQuery, ensureContentType, options.preMiddleware, options.preCreate, accessMiddleware, ops.createObject, prepareOutput);\n  app.post(uriItem, util.deprecate(prepareQuery, 'express-restify-mongoose: in a future major version, the POST method to update resources will be removed. Use PATCH instead.'), ensureContentType, options.preMiddleware, options.findOneAndUpdate ? [] : filterAndFindById, options.preUpdate, accessMiddleware, ops.modifyObject, prepareOutput);\n\n  app.put(uriItem, util.deprecate(prepareQuery, 'express-restify-mongoose: in a future major version, the PUT method will replace rather than update a resource. Use PATCH instead.'), ensureContentType, options.preMiddleware, options.findOneAndUpdate ? [] : filterAndFindById, options.preUpdate, accessMiddleware, ops.modifyObject, prepareOutput);\n  app.patch(uriItem, prepareQuery, ensureContentType, options.preMiddleware, options.findOneAndUpdate ? [] : filterAndFindById, options.preUpdate, accessMiddleware, ops.modifyObject, prepareOutput);\n\n  app.delete(uriItems, prepareQuery, options.preMiddleware, options.preDelete, ops.deleteItems, prepareOutput);\n  app.delete(uriItem, prepareQuery, options.preMiddleware, options.findOneAndRemove ? [] : filterAndFindById, options.preDelete, ops.deleteItem, prepareOutput);\n\n  return uriItems;\n};\n\nmodule.exports = {\n  defaults: function defaults(options) {\n    customDefaults = options;\n  },\n  serve: restify\n};\n//# sourceMappingURL=data:application/json;base64,\n//# sourceMappingURL=express-restify-mongoose.js.map","/home/travis/build/npmtest/node-npmtest-express-restify-mongoose/express-restify-mongoose/lib/resource_filter.js":"'use strict';\n\nvar _ = require('lodash');\nvar detective = require('mongoose-detective');\nvar weedout = require('weedout');\n\n/**\r\n * Represents a filter.\r\n * @constructor\r\n * @param {Object} opts - Options\r\n * @param {Object} opts.model - Mongoose model\r\n * @param {Object} opts.excludedMap {} - Filtered keys for related models\r\n * @param {Object} opts.filteredKeys {} - Keys to filter for the current model\r\n */\nfunction Filter(opts) {\n  this.model = opts.model;\n\n  this.filteredKeys = _.isPlainObject(opts.filteredKeys) ? {\n    private: opts.filteredKeys.private || [],\n    protected: opts.filteredKeys.protected || []\n  } : {\n    private: [],\n    protected: []\n  };\n\n  if (this.model && this.model.discriminators && _.isPlainObject(opts.excludedMap)) {\n    for (var modelName in this.model.discriminators) {\n      if (opts.excludedMap[modelName]) {\n        this.filteredKeys.private = this.filteredKeys.private.concat(opts.excludedMap[modelName].private);\n        this.filteredKeys.protected = this.filteredKeys.protected.concat(opts.excludedMap[modelName].protected);\n      }\n    }\n  }\n}\n\n/**\r\n * Gets excluded keys for a given model and access.\r\n * @memberof Filter\r\n * @param {Object} - Options.\r\n * @param {String} opts.access {public} - Access level (private, protected or public).\r\n * @param {Object} opts.excludedMap {} - Filtered keys for related models\r\n * @param {Object} opts.filteredKeys {} - Keys to filter for the current model\r\n * @returns {Array} - Keys to filter.\r\n */\nFilter.prototype.getExcluded = function (opts) {\n  if (opts.access === 'private') {\n    return [];\n  }\n\n  var entry = opts.excludedMap && opts.modelName ? opts.excludedMap[opts.modelName] : null;\n\n  if (!entry) {\n    entry = _.isPlainObject(opts.filteredKeys) ? {\n      private: opts.filteredKeys.private || [],\n      protected: opts.filteredKeys.protected || []\n    } : {\n      private: [],\n      protected: []\n    };\n  }\n\n  return opts.access === 'protected' ? entry.private : entry.private.concat(entry.protected);\n};\n\nFilter.prototype.isExcluded = function (field, opts) {\n  if (!field) {\n    return false;\n  }\n\n  opts = _.defaults(opts, {\n    access: 'public',\n    excludedMap: {},\n    filteredKeys: this.filteredKeys,\n    modelName: this.model.modelName\n  });\n\n  return this.getExcluded(opts).indexOf(field) >= 0;\n};\n\n/**\r\n * Removes excluded keys from a document.\r\n * @memberof Filter\r\n * @param {Object} - Source document.\r\n * @param {Array} - Keys to filter.\r\n * @returns {Object} - Filtered document.\r\n */\nFilter.prototype.filterItem = function (item, excluded) {\n  var _this = this;\n\n  if (_.isArray(item)) {\n    return item.map(function (i) {\n      return _this.filterItem(i, excluded);\n    });\n  }\n\n  if (item && excluded) {\n    if (_.isFunction(item.toObject)) {\n      item = item.toObject();\n    }\n\n    for (var i = 0, length = excluded.length; i < length; i++) {\n      if (excluded[i].indexOf('.') > 0) {\n        weedout(item, excluded[i]);\n      } else {\n        delete item[excluded[i]];\n      }\n    }\n  }\n\n  return item;\n};\n\n/**\r\n * Removes excluded keys from a document with populated subdocuments.\r\n * @memberof Filter\r\n * @param {Object} - Source document.\r\n * @param {Object} - Keys to filter.\r\n * @param {Array} opts.populate - Paths to populated subdocuments.\r\n * @param {String} opts.access - Access level (private, protected or public).\r\n * @param {Object} opts.excludedMap {} - Filtered keys for related models\r\n * @returns {Object} - Filtered document.\r\n */\nFilter.prototype.filterPopulatedItem = function (item, opts) {\n  var _this2 = this;\n\n  if (_.isArray(item)) {\n    return item.map(function (i) {\n      return _this2.filterPopulatedItem(i, opts);\n    });\n  }\n\n  for (var i = 0; i < opts.populate.length; i++) {\n    if (!opts.populate[i].path) {\n      continue;\n    }\n\n    var excluded = this.getExcluded({\n      access: opts.access,\n      excludedMap: opts.excludedMap,\n      modelName: detective(this.model, opts.populate[i].path)\n    });\n\n    if (_.has(item, opts.populate[i].path)) {\n      this.filterItem(_.get(item, opts.populate[i].path), excluded);\n    } else {\n      var pathToArray = opts.populate[i].path.split('.').slice(0, -1).join('.');\n\n      if (_.has(item, pathToArray)) {\n        var array = _.get(item, pathToArray);\n        var pathToObject = opts.populate[i].path.split('.').slice(-1).join('.');\n\n        this.filterItem(_.map(array, pathToObject), excluded);\n      }\n    }\n  }\n\n  return item;\n};\n\n/**\r\n * Removes excluded keys from a document.\r\n * @memberof Filter\r\n * @access public\r\n * @param {Object} - Source document.\r\n * @param {Object} - Options.\r\n * @param {String} opts.access {public} - Access level (private, protected or public).\r\n * @param {Object} opts.excludedMap {} - Filtered keys for related models\r\n * @param {Array} opts.populate - Paths to populated subdocuments.\r\n * @returns {Object} - Filtered document.\r\n */\nFilter.prototype.filterObject = function (resource) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  opts = _.defaults(opts, {\n    access: 'public',\n    excludedMap: {},\n    filteredKeys: this.filteredKeys,\n    modelName: this.model.modelName\n  });\n\n  var filtered = this.filterItem(resource, this.getExcluded(opts));\n\n  if (opts.populate) {\n    this.filterPopulatedItem(filtered, opts);\n  }\n\n  return filtered;\n};\n\nmodule.exports = Filter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXNvdXJjZV9maWx0ZXIuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJkZXRlY3RpdmUiLCJ3ZWVkb3V0IiwiRmlsdGVyIiwib3B0cyIsIm1vZGVsIiwiZmlsdGVyZWRLZXlzIiwiaXNQbGFpbk9iamVjdCIsInByaXZhdGUiLCJwcm90ZWN0ZWQiLCJkaXNjcmltaW5hdG9ycyIsImV4Y2x1ZGVkTWFwIiwibW9kZWxOYW1lIiwiY29uY2F0IiwicHJvdG90eXBlIiwiZ2V0RXhjbHVkZWQiLCJhY2Nlc3MiLCJlbnRyeSIsImlzRXhjbHVkZWQiLCJmaWVsZCIsImRlZmF1bHRzIiwiaW5kZXhPZiIsImZpbHRlckl0ZW0iLCJpdGVtIiwiZXhjbHVkZWQiLCJpc0FycmF5IiwibWFwIiwiaSIsImlzRnVuY3Rpb24iLCJ0b09iamVjdCIsImxlbmd0aCIsImZpbHRlclBvcHVsYXRlZEl0ZW0iLCJwb3B1bGF0ZSIsInBhdGgiLCJoYXMiLCJnZXQiLCJwYXRoVG9BcnJheSIsInNwbGl0Iiwic2xpY2UiLCJqb2luIiwiYXJyYXkiLCJwYXRoVG9PYmplY3QiLCJmaWx0ZXJPYmplY3QiLCJyZXNvdXJjZSIsImZpbHRlcmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxJQUFJQyxRQUFRLFFBQVIsQ0FBVjtBQUNBLElBQU1DLFlBQVlELFFBQVEsb0JBQVIsQ0FBbEI7QUFDQSxJQUFNRSxVQUFVRixRQUFRLFNBQVIsQ0FBaEI7O0FBRUE7Ozs7Ozs7O0FBUUEsU0FBU0csTUFBVCxDQUFpQkMsSUFBakIsRUFBdUI7QUFDckIsT0FBS0MsS0FBTCxHQUFhRCxLQUFLQyxLQUFsQjs7QUFFQSxPQUFLQyxZQUFMLEdBQW9CUCxFQUFFUSxhQUFGLENBQWdCSCxLQUFLRSxZQUFyQixJQUFxQztBQUN2REUsYUFBU0osS0FBS0UsWUFBTCxDQUFrQkUsT0FBbEIsSUFBNkIsRUFEaUI7QUFFdkRDLGVBQVdMLEtBQUtFLFlBQUwsQ0FBa0JH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QUFFdEJMLGlCQUFhLEVBRlM7QUFHdEJMLGtCQUFjLEtBQUtBLFlBSEc7QUFJdEJNLGVBQVcsS0FBS1AsS0FBTCxDQUFXTztBQUpBLEdBQWpCLENBQVA7O0FBT0EsTUFBSWdDLFdBQVcsS0FBS3RCLFVBQUwsQ0FBZ0JxQixRQUFoQixFQUEwQixLQUFLNUIsV0FBTCxDQUFpQlgsSUFBakIsQ0FBMUIsQ0FBZjs7QUFFQSxNQUFJQSxLQUFLNEIsUUFBVCxFQUFtQjtBQUNqQixTQUFLRCxtQkFBTCxDQUF5QmEsUUFBekIsRUFBbUN4QyxJQUFuQztBQUNEOztBQUVELFNBQU93QyxRQUFQO0FBQ0QsQ0FmRDs7QUFpQkFDLE9BQU9DLE9BQVAsR0FBaUIzQyxNQUFqQiIsImZpbGUiOiJyZXNvdXJjZV9maWx0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJylcclxuY29uc3QgZGV0ZWN0aXZlID0gcmVxdWlyZSgnbW9uZ29vc2UtZGV0ZWN0aXZlJylcclxuY29uc3Qgd2VlZG91dCA9IHJlcXVpcmUoJ3dlZWRvdXQnKVxyXG5cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgYSBmaWx0ZXIuXHJcbiAqIEBjb25zdHJ1Y3RvclxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyAtIE9wdGlvbnNcclxuICogQHBhcmFtIHtPYmplY3R9IG9wdHMubW9kZWwgLSBNb25nb29zZSBtb2RlbFxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cy5leGNsdWRlZE1hcCB7fSAtIEZpbHRlcmVkIGtleXMgZm9yIHJlbGF0ZWQgbW9kZWxzXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzLmZpbHRlcmVkS2V5cyB7fSAtIEtleXMgdG8gZmlsdGVyIGZvciB0aGUgY3VycmVudCBtb2RlbFxyXG4gKi9cclxuZnVuY3Rpb24gRmlsdGVyIChvcHRzKSB7XHJcbiAgdGhpcy5tb2RlbCA9IG9wdHMubW9kZWxcclxuXHJcbiAgdGhpcy5maWx0ZXJlZEtleXMgPSBfLmlzUGxhaW5PYmplY3Qob3B0cy5maWx0ZXJlZEtleXMpID8ge1xyXG4gICAgcHJpdmF0ZTogb3B0cy5maWx0ZXJlZEtleXMucHJpdmF0ZSB8fCBbXSxcclxuICAgIHByb3RlY3RlZDogb3B0cy5maWx0ZXJlZEtleXMucHJvdGVjdGVkIHx8IFtdXHJcbiAgfSA6IHtcclxuICAgIHByaXZhdGU6IFtdLFxyXG4gICAgcHJvdGVjdGVkOiBbXVxyXG4gIH1cclxuXHJcbiAgaWYgKHRoaXMubW9kZWwgJiYgdGhpcy5tb2RlbC5kaXNjcmltaW5hdG9ycyAmJiBfLmlzUGxhaW5PYmplY3Qob3B0cy5leGNsdWRlZE1hcCkpIHtcclxuICAgIGZvciAobGV0IG1vZGVsTmFtZSBpbiB0aGlzLm1vZGVsLmRpc2NyaW1pbmF0b3JzKSB7XHJcbiAgICAgIGlmIChvcHRzLmV4Y2x1ZGVkTWFwW21vZGVsTmFtZV0pIHtcclxuICAgICAgICB0aGlzLmZpbHRlcmVkS2V5cy5wcml2YXRlID0gdGhpcy5maWx0ZXJlZEtleXMucHJpdmF0ZS5jb25jYXQob3B0cy5leGNsdWRlZE1hcFttb2RlbE5hbWVdLnByaXZhdGUpXHJcbiAgICAgICAgdGhpcy5maWx0ZXJlZEtleXMucHJvdGVjdGVkID0gdGhpcy5maWx0ZXJlZEtleXMucHJvdGVjdGVkLmNvbmNhdChvcHRzLmV4Y2x1ZGVkTWFwW21vZGVsTmFtZV0ucHJvdGVjdGVkKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogR2V0cyBleGNsdWRlZCBrZXlzIGZvciBhIGdpdmVuIG1vZGVsIGFuZCBhY2Nlc3MuXHJcbiAqIEBtZW1iZXJvZiBGaWx0ZXJcclxuICogQHBhcmFtIHtPYmplY3R9IC0gT3B0aW9ucy5cclxuICogQHBhcmFtIHtTdHJpbmd9IG9wdHMuYWNjZXNzIHtwdWJsaWN9IC0gQWNjZXNzIGxldmVsIChwcml2YXRlLCBwcm90ZWN0ZWQgb3IgcHVibGljKS5cclxuICogQHBhcmFtIHtPYmplY3R9IG9wdHMuZXhjbHVkZWRNYXAge30gLSBGaWx0ZXJlZCBrZXlzIGZvciByZWxhdGVkIG1vZGVsc1xyXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cy5maWx0ZXJlZEtleXMge30gLSBLZXlzIHRvIGZpbHRlciBmb3IgdGhlIGN1cnJlbnQgbW9kZWxcclxuICogQHJldHVybnMge0FycmF5fSAtIEtleXMgdG8gZmlsdGVyLlxyXG4gKi9cclxuRmlsdGVyLnByb3RvdHlwZS5nZXRFeGNsdWRlZCA9IGZ1bmN0aW9uIChvcHRzKSB7XHJcbiAgaWYgKG9wdHMuYWNjZXNzID09PSAncHJpdmF0ZScpIHtcclxuICAgIHJldHVybiBbXVxyXG4gIH1cclxuXHJcbiAgbGV0IGVudHJ5ID0gb3B0cy5leGNsdWRlZE1hcCAmJiBvcHRzLm1vZGVsTmFtZSA/IG9wdHMuZXhjbHVkZWRNYXBbb3B0cy5tb2RlbE5hbWVdIDogbnVsbFxyXG5cclxuICBpZiAoIWVudHJ5KSB7XHJcbiAgICBlbnRyeSA9IF8uaXNQbGFpbk9iamVjdChvcHRzLmZpbHRlcmVkS2V5cykgPyB7XHJcbiAgICAgIHByaXZhdGU6IG9wdHMuZmlsdGVyZWRLZXlzLnByaXZhdGUgfHwgW10sXHJcbiAgICAgIHByb3RlY3RlZDogb3B0cy5maWx0ZXJlZEtleXMucHJvdGVjdGVkIHx8IFtdXHJcbiAgICB9IDoge1xyXG4gICAgICBwcml2YXRlOiBbXSxcclxuICAgICAgcHJvdGVjdGVkOiBbXVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG9wdHMuYWNjZXNzID09PSAncHJvdGVjdGVkJyA/IGVudHJ5LnByaXZhdGUgOiBlbnRyeS5wcml2YXRlLmNvbmNhdChlbnRyeS5wcm90ZWN0ZWQpXHJcbn1cclxuXHJcbkZpbHRlci5wcm90b3R5cGUuaXNFeGNsdWRlZCA9IGZ1bmN0aW9uIChmaWVsZCwgb3B0cykge1xyXG4gIGlmICghZmllbGQpIHtcclxuICAgIHJldHVybiBmYWxzZVxyXG4gIH1cclxuXHJcbiAgb3B0cyA9IF8uZGVmYXVsdHMob3B0cywge1xyXG4gICAgYWNjZXNzOiAncHVibGljJyxcclxuICAgIGV4Y2x1ZGVkTWFwOiB7fSxcclxuICAgIGZpbHRlcmVkS2V5czogdGhpcy5maWx0ZXJlZEtleXMsXHJcbiAgICBtb2RlbE5hbWU6IHRoaXMubW9kZWwubW9kZWxOYW1lXHJcbiAgfSlcclxuXHJcbiAgcmV0dXJuIHRoaXMuZ2V0RXhjbHVkZWQob3B0cykuaW5kZXhPZihmaWVsZCkgPj0gMFxyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlcyBleGNsdWRlZCBrZXlzIGZyb20gYSBkb2N1bWVudC5cclxuICogQG1lbWJlcm9mIEZpbHRlclxyXG4gKiBAcGFyYW0ge09iamVjdH0gLSBTb3VyY2UgZG9jdW1lbnQuXHJcbiAqIEBwYXJhbSB7QXJyYXl9IC0gS2V5cyB0byBmaWx0ZXIuXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IC0gRmlsdGVyZWQgZG9jdW1lbnQuXHJcbiAqL1xyXG5GaWx0ZXIucHJvdG90eXBlLmZpbHRlckl0ZW0gPSBmdW5jdGlvbiAoaXRlbSwgZXhjbHVkZWQpIHtcclxuICBpZiAoXy5pc0FycmF5KGl0ZW0pKSB7XHJcbiAgICByZXR1cm4gaXRlbS5tYXAoKGkpID0+IHRoaXMuZmlsdGVySXRlbShpLCBleGNsdWRlZCkpXHJcbiAgfVxyXG5cclxuICBpZiAoaXRlbSAmJiBleGNsdWRlZCkge1xyXG4gICAgaWYgKF8uaXNGdW5jdGlvbihpdGVtLnRvT2JqZWN0KSkge1xyXG4gICAgICBpdGVtID0gaXRlbS50b09iamVjdCgpXHJcbiAgICB9XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDAsIGxlbmd0aCA9IGV4Y2x1ZGVkLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmIChleGNsdWRlZFtpXS5pbmRleE9mKCcuJykgPiAwKSB7XHJcbiAgICAgICAgd2VlZG91dChpdGVtLCBleGNsdWRlZFtpXSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBkZWxldGUgaXRlbVtleGNsdWRlZFtpXV1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGl0ZW1cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZXMgZXhjbHVkZWQga2V5cyBmcm9tIGEgZG9jdW1lbnQgd2l0aCBwb3B1bGF0ZWQgc3ViZG9jdW1lbnRzLlxyXG4gKiBAbWVtYmVyb2YgRmlsdGVyXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSAtIFNvdXJjZSBkb2N1bWVudC5cclxuICogQHBhcmFtIHtPYmplY3R9IC0gS2V5cyB0byBmaWx0ZXIuXHJcbiAqIEBwYXJhbSB7QXJyYXl9IG9wdHMucG9wdWxhdGUgLSBQYXRocyB0byBwb3B1bGF0ZWQgc3ViZG9jdW1lbnRzLlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0cy5hY2Nlc3MgLSBBY2Nlc3MgbGV2ZWwgKHByaXZhdGUsIHByb3RlY3RlZCBvciBwdWJsaWMpLlxyXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cy5leGNsdWRlZE1hcCB7fSAtIEZpbHRlcmVkIGtleXMgZm9yIHJlbGF0ZWQgbW9kZWxzXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IC0gRmlsdGVyZWQgZG9jdW1lbnQuXHJcbiAqL1xyXG5GaWx0ZXIucHJvdG90eXBlLmZpbHRlclBvcHVsYXRlZEl0ZW0gPSBmdW5jdGlvbiAoaXRlbSwgb3B0cykge1xyXG4gIGlmIChfLmlzQXJyYXkoaXRlbSkpIHtcclxuICAgIHJldHVybiBpdGVtLm1hcCgoaSkgPT4gdGhpcy5maWx0ZXJQb3B1bGF0ZWRJdGVtKGksIG9wdHMpKVxyXG4gIH1cclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBvcHRzLnBvcHVsYXRlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBpZiAoIW9wdHMucG9wdWxhdGVbaV0ucGF0aCkge1xyXG4gICAgICBjb250aW51ZVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGV4Y2x1ZGVkID0gdGhpcy5nZXRFeGNsdWRlZCh7XHJcbiAgICAgIGFjY2Vzczogb3B0cy5hY2Nlc3MsXHJcbiAgICAgIGV4Y2x1ZGVkTWFwOiBvcHRzLmV4Y2x1ZGVkTWFwLFxyXG4gICAgICBtb2RlbE5hbWU6IGRldGVjdGl2ZSh0aGlzLm1vZGVsLCBvcHRzLnBvcHVsYXRlW2ldLnBhdGgpXHJcbiAgICB9KVxyXG5cclxuICAgIGlmIChfLmhhcyhpdGVtLCBvcHRzLnBvcHVsYXRlW2ldLnBhdGgpKSB7XHJcbiAgICAgIHRoaXMuZmlsdGVySXRlbShfLmdldChpdGVtLCBvcHRzLnBvcHVsYXRlW2ldLnBhdGgpLCBleGNsdWRlZClcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnN0IHBhdGhUb0FycmF5ID0gb3B0cy5wb3B1bGF0ZVtpXS5wYXRoLnNwbGl0KCcuJykuc2xpY2UoMCwgLTEpLmpvaW4oJy4nKVxyXG5cclxuICAgICAgaWYgKF8uaGFzKGl0ZW0sIHBhdGhUb0FycmF5KSkge1xyXG4gICAgICAgIGNvbnN0IGFycmF5ID0gXy5nZXQoaXRlbSwgcGF0aFRvQXJyYXkpXHJcbiAgICAgICAgY29uc3QgcGF0aFRvT2JqZWN0ID0gb3B0cy5wb3B1bGF0ZVtpXS5wYXRoLnNwbGl0KCcuJykuc2xpY2UoLTEpLmpvaW4oJy4nKVxyXG5cclxuICAgICAgICB0aGlzLmZpbHRlckl0ZW0oXy5tYXAoYXJyYXksIHBhdGhUb09iamVjdCksIGV4Y2x1ZGVkKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gaXRlbVxyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlcyBleGNsdWRlZCBrZXlzIGZyb20gYSBkb2N1bWVudC5cclxuICogQG1lbWJlcm9mIEZpbHRlclxyXG4gKiBAYWNjZXNzIHB1YmxpY1xyXG4gKiBAcGFyYW0ge09iamVjdH0gLSBTb3VyY2UgZG9jdW1lbnQuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSAtIE9wdGlvbnMuXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHRzLmFjY2VzcyB7cHVibGljfSAtIEFjY2VzcyBsZXZlbCAocHJpdmF0ZSwgcHJvdGVjdGVkIG9yIHB1YmxpYykuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzLmV4Y2x1ZGVkTWFwIHt9IC0gRmlsdGVyZWQga2V5cyBmb3IgcmVsYXRlZCBtb2RlbHNcclxuICogQHBhcmFtIHtBcnJheX0gb3B0cy5wb3B1bGF0ZSAtIFBhdGhzIHRvIHBvcHVsYXRlZCBzdWJkb2N1bWVudHMuXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IC0gRmlsdGVyZWQgZG9jdW1lbnQuXHJcbiAqL1xyXG5GaWx0ZXIucHJvdG90eXBlLmZpbHRlck9iamVjdCA9IGZ1bmN0aW9uIChyZXNvdXJjZSwgb3B0cyA9IHt9KSB7XHJcbiAgb3B0cyA9IF8uZGVmYXVsdHMob3B0cywge1xyXG4gICAgYWNjZXNzOiAncHVibGljJyxcclxuICAgIGV4Y2x1ZGVkTWFwOiB7fSxcclxuICAgIGZpbHRlcmVkS2V5czogdGhpcy5maWx0ZXJlZEtleXMsXHJcbiAgICBtb2RlbE5hbWU6IHRoaXMubW9kZWwubW9kZWxOYW1lXHJcbiAgfSlcclxuXHJcbiAgbGV0IGZpbHRlcmVkID0gdGhpcy5maWx0ZXJJdGVtKHJlc291cmNlLCB0aGlzLmdldEV4Y2x1ZGVkKG9wdHMpKVxyXG5cclxuICBpZiAob3B0cy5wb3B1bGF0ZSkge1xyXG4gICAgdGhpcy5maWx0ZXJQb3B1bGF0ZWRJdGVtKGZpbHRlcmVkLCBvcHRzKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZpbHRlcmVkXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRmlsdGVyXHJcbiJdfQ==\n//# sourceMappingURL=resource_filter.js.map"}